name: ImmortalWrt-RM2100  #CI项目名

on:
  schedule:  #自动编译：每天早上6点
    - cron: 0 22 * * *
  workflow_dispatch:  #手动编译

env:
  IMMORTALWRT_TARGET: RM2100  #项目平台
  IMMORTALWRT_NAME: ImmortalWrt  #默认主机名
  IMMORTALWRT_IP: 192.168.1.1  #默认IP地址
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  IMMORTALWRT_URL: https://github.com/padavanonly/immortalwrt.git
  LIST_URL: https://raw.githubusercontent.com/Star-ZER0/OpenWrt-CI/main/Depends.txt

permissions: write-all

jobs:
  build_openwrt:
    name: Build Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E rm -rf $(curl -sfL $LIST_URL | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(curl -sfL $LIST_URL | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(curl -sfL $LIST_URL | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq clean
          sudo -E apt -yqq autoclean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Check Projects
        uses: actions/checkout@v3

      - name: Check Scripts
        run: |
          cd ./Scripts

          chmod +x ./*.sh
          dos2unix ./*.sh

      - name: Clone ImmortalWrt Code
        run: |
          git clone --depth=1 --single-branch $IMMORTALWRT_URL

      - name: Update Feeds
        run: |
          cd ./immortalwrt

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Custom Scripts
        run: |
          cd ./immortalwrt
          $GITHUB_WORKSPACE/Scripts/Settings-ImmortalWrt.sh

          cd ./package
          $GITHUB_WORKSPACE/Scripts/Plugins.sh

      - name: Custom Settings
        run: |
          cd ./immortalwrt

          rm -rf ./tmp && rm -rf ./.config*
          cat $GITHUB_WORKSPACE/Config/$IMMORTALWRT_TARGET.txt $GITHUB_WORKSPACE/Config/General.txt >> .config

          make defconfig

      - name: Download Packages
        run: |
          cd ./immortalwrt

          make download -j$(nproc)

      - name: Compile Firmware
        run: |
          cd ./immortalwrt

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./build_dir
          echo "======================="
          du -h --max-depth=1 ./bin
          echo "======================="

      - name: Package Firmware
        run: |
          export IMMORTALWRT_TYPE=$(sed -n "1{s/^#//;s/\r$//;p;q}" $GITHUB_WORKSPACE/Config/$IMMORTALWRT_TARGET.txt)
          export IMMORTALWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")

          echo "IMMORTALWRT_TARGET=$IMMORTALWRT_TARGET" >> $GITHUB_ENV
          echo "IMMORTALWRT_DATE=$IMMORTALWRT_DATE" >> $GITHUB_ENV
          echo "IMMORTALWRT_TYPE=$IMMORTALWRT_TYPE" >> $GITHUB_ENV
          echo "IMMORTALWRT_IP=$IMMORTALWRT_IP" >> $GITHUB_ENV

          cd ./immortalwrt && mkdir ./upload
          cp -rf $(find ./bin/targets/ -type f -iregex ".*\.\(bin\|iso\|vmdk\|img.gz\)") ./upload/
          cp -rf ./.config ./upload/"$IMMORTALWRT_TARGET"_Config_"$IMMORTALWRT_DATE".txt

          cd ./upload

      - name: Release Firmware
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.IMMORTALWRT_TARGET}}_IMMORTALWRT_${{env.IMMORTALWRT_DATE}}
          files: ./immortalwrt/upload/*.*
          body: |
            设备：${{env.IMMORTALWRT_TYPE}}
            地址：${{env.IMMORTALWRT_IP}}
            密码：password

      - name: Delete Old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 4
          delete_tags: true

      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3
